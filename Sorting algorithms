//1. quick sort

void quickSort(vector &v ,int left,int right){
  int low = left;
  int high = right;
  int key = v[left];
  
    while(low<high){
      while(low<high && v[high]>v[key]){
        high--;
      }
      v[low] = v[high];
      while(low<high && v[low]<v[key]){
        low++;
      }
      v[high] = v[low];
    }
    v[low] = key;
    quickSort(v,left,low-1);
    quickSort(v,low+1,right);
}


//2. Insert sort
void insertSort(int[] arr){
  int n = arr.length;
  int target;
  
  for(int i=1;i<n;i++){
    int j=i;
    target = arr[i];
    while(j>0 && target>arr[j-1]){
      arr[j] = arr[j-1];
      j--;
    }
    arr[j] = target;
  }
}


// 3. Select sort

void selectSort(int[] v){
  int min;
  int n = v.length;
  int temp;
  int k;
  for(int i = 0;i<n;i++){
    min = v[i];
    for(int j = i+1;j<n;j++){
      if(min>v[j])
        min = v[j];
        k = j;
    }
    temp = v[i];
    v[i] = min;
    v[k] = temp;
  }
}




